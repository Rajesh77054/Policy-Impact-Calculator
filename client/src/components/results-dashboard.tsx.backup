import { useQuery } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { MobileTooltip } from "@/components/ui/mobile-tooltip";
import { Progress } from "@/components/ui/progress";
import { Separator } from "@/components/ui/separator";
import { 
  TrendingDown, 
  TrendingUp, 
  DollarSign, 
  Heart, 
  Zap, 
  Users, 
  Building, 
  GraduationCap,
  HelpCircle,
  Download,
  Share2,
  Calendar,
  Calculator
} from "lucide-react";
import PolicyCharts from "./policy-charts";
import MethodologyModal from "./methodology-modal";
import { PolicyResults } from "@shared/types";
import { Shield, Home, Clock, BookOpen, Info, ToggleLeft, ToggleRight } from "lucide-react";
import { Link } from "wouter";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import DataDisclaimer from "@/components/data-disclaimer";
import { useState } from "react";

interface ResultsDashboardProps {
  results: PolicyResults;
}

export default function ResultsDashboard({ results }: ResultsDashboardProps) {
  const [showBigBillComparison, setShowBigBillComparison] = useState(false);

  // Use appropriate scenario data based on toggle
  const currentData = showBigBillComparison ? results.bigBillScenario : results;

  const formatCurrency = (amount: number) => {
    if (amount === 0) return "$0";
    const sign = amount > 0 ? "+" : "";
    return `${sign}$${amount.toLocaleString()}`;
  };

  const formatTaxImpact = (amount: number) => {
    if (amount < 0) {
      return `Save $${Math.abs(amount).toLocaleString()} in taxes`;
    } else if (amount > 0) {
      return `Pay $${amount.toLocaleString()} more in taxes`;
    } else {
      return "No tax change";
    }
  };

  const formatCostImpact = (amount: number) => {
    if (amount < 0) {
      return `Save $${Math.abs(amount).toLocaleString()} per year`;
    } else if (amount > 0) {
      return `Pay $${amount.toLocaleString()} more per year`;
    } else {
      return "No cost change";
    }
  };

  const formatNetImpact = (amount: number) => {
    if (amount < 0) {
      return `Save $${Math.abs(amount).toLocaleString()} annually`;
    } else if (amount > 0) {
      return `Pay $${amount.toLocaleString()} more annually`;
    } else {
      return "No net change";
    }
  };

  const formatPercentage = (value: number) => {
    const sign = value >= 0 ? "+" : "";
    return `${sign}${value}%`;
  };

  const getCalculationExplanation = (type: string, data: PolicyResults) => {
    switch (type) {
      case 'tax':
        return `Tax calculation: Standard deduction ${data.breakdown[0]?.details[0]?.amount || 'change'} + bracket adjustments ${data.breakdown[0]?.details[1]?.amount || 'change'} = ${formatCurrency(data.annualTaxImpact)} net impact. Based on IRS Publication 15 and current tax brackets.`;
      case 'healthcare':
        return `Healthcare calculation: Current costs $${data.healthcareCosts.current} â†’ Proposed costs $${data.healthcareCosts.proposed} = ${formatCurrency(data.healthcareCostImpact)} impact. Based on Kaiser Family Foundation employer survey data and CMS expenditure reports.`;
      case 'energy':
        return `Energy calculation: Baseline household energy costs adjusted for proposed carbon pricing and efficiency programs = ${formatCurrency(data.energyCostImpact)} impact. Based on EIA residential energy consumption data.`;
      case 'net':
        return `Net calculation: ${formatCurrency(data.annualTaxImpact)} (tax) + ${formatCurrency(data.healthcareCostImpact)} (healthcare) + ${formatCurrency(data.energyCostImpact)} (energy) = ${formatCurrency(data.netAnnualImpact)} total annual impact.`;
      case 'timeline':
        return `Timeline calculation: Year 1: ${formatCurrency(data.netAnnualImpact)} â†’ 5 years: ${formatCurrency(data.timeline.fiveYear)} â†’ 10 years: ${formatCurrency(data.timeline.tenYear)} â†’ 20 years: ${formatCurrency(data.timeline.twentyYear)}. Includes 2.5% annual inflation compounding.`;
      default:
        return '';
    }
  };

  return (
    <TooltipProvider>
      <div className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Results Header */}
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-slate-900 mb-4">Your Personal Policy Impact Report</h2>
          <p className="text-xl text-slate-600 max-w-3xl mx-auto">
            Based on your profile and data from authoritative government and nonpartisan sources, here's how different policy proposals might affect you personally.
          </p>
          <p className="text-sm text-slate-500 mt-2">
            Calculations use current IRS tax brackets, Kaiser Family Foundation healthcare data, and Congressional Budget Office methodology.
          </p>

          {/* Quick Insights Banner - Unified with other calculations */}
          {results.bigBillScenario && (
            <div className="mt-6 max-w-4xl mx-auto">
              {(() => {
                const difference = results.bigBillScenario.netAnnualImpact - results.netAnnualImpact;
                const isSavings = difference < 0;
                return (
                  <div className={`p-4 rounded-lg border-2 ${isSavings ? 'bg-green-50 border-green-200' : 'bg-blue-50 border-blue-200'}`}>
                    <div className="flex items-center justify-center space-x-2 text-lg font-semibold">
                      <span className={isSavings ? 'text-green-700' : 'text-blue-700'}>
                        ðŸ“Š Quick Insight:
                      </span>
                      <span className={isSavings ? 'text-green-700' : 'text-blue-700'}>
                        {isSavings 
                          ? `You could save approximately $${Math.abs(difference).toLocaleString()} annually`
                          : `Your costs could increase by approximately $${Math.abs(difference).toLocaleString()} annually`
                        }
                      </span>
                    </div>
                    <p className="text-sm mt-2 text-slate-600">
                      {isSavings 
                        ? "The proposed policy appears favorable for your financial situation, primarily through tax relief and healthcare cost reductions."
                        : "While the proposed policy may increase some costs, it could provide community benefits and long-term economic improvements."
                      }
                    </p>
                  </div>
                );
              })()}
            </div>
          )}
          <div className="flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-6 mt-6 px-4">
            <div className="flex items-center space-x-2 text-emerald-600">
              <Shield className="w-5 h-5" />
              <span className="text-sm font-medium">Anonymous & Secure</span>
            </div>
            <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 w-full sm:w-auto">
              <MethodologyModal 
                trigger={
                  <Button variant="outline" size="sm" className="flex items-center justify-center space-x-2 w-full sm:w-auto">
                    <BookOpen className="w-4 h-4" />
                    <span className="text-sm">View Sources & Methods</span>
                  </Button>
                }
              />
              <Button 
                variant="outline" 
                size="sm"
                onClick={() => {
                  navigator.share({
                    title: 'Policy Impact Calculator Results',
                    text: `My policy impact analysis shows ${results.netAnnualImpact < 0 ? 'potential savings' : 'estimated costs'} of $${Math.abs(results.netAnnualImpact).toLocaleString()} annually.`,
                    url: window.location.href
                  }).catch(() => {
                    navigator.clipboard.writeText(window.location.href);
                  });
                }}
                className="flex items-center justify-center space-x-2 w-full sm:w-auto"
              >
                <Share2 className="w-4 h-4" />
                <span className="text-sm">Share Results</span>
              </Button>
            </div>
          </div>
        </div>

        <DataDisclaimer />

        {/* PRIMARY: Your Long-term Financial Impact - Featured Full Width */}
        <div className="mb-8">
          <Card className="border-2 border-purple-200 bg-gradient-to-br from-purple-50 to-indigo-50 shadow-lg">
            <CardHeader className="pb-4">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-1">
                  <CardTitle className="text-2xl font-bold text-purple-900">Your Long-term Financial Impact</CardTitle>
                  <MobileTooltip
                    content="All amounts adjusted for projected 2.5% annual inflation using Bureau of Labor Statistics Consumer Price Index data. Shows real purchasing power over time."
                    title="Inflation-Adjusted Projections"
                    icon="help"
                    iconSize="md"
                  />
                </div>
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                  <Clock className="w-6 h-6 text-purple-600" />
                </div>
              </div>
            </CardHeader>
            <CardContent>
              {/* Headline Impact */}
                <div className="mb-6 p-6 bg-white rounded-lg border border-purple-200">
                  <div className="text-center">
                    <h3 className="text-lg font-semibold text-purple-800 mb-3">What This Means for Your Family</h3>
                    <div className="text-4xl font-bold text-purple-900 mb-2">
                      {(() => {
                        const difference = (results.bigBillScenario?.netAnnualImpact || 0) - results.netAnnualImpact;
                        if (Math.abs(difference) < 100) return "Nearly No Difference";
                        if (difference < 0) return `Save $${Math.abs(difference).toLocaleString()} more`;
                        return `Pay $${Math.abs(difference).toLocaleString()} more`;
                      })()}
                    </div>
                    <p className="text-lg text-purple-700 mb-1">
                      {(() => {
                        const difference = (results.bigBillScenario?.netAnnualImpact || 0) - results.netAnnualImpact;
                        if (difference < 0) return "Additional annual savings with proposed policy";
                        return "Additional annual costs with proposed policy";
                      })()}
                    </p>
                    <p className="text-sm text-purple-600">
                      {(() => {
                        const difference = (results.bigBillScenario?.timeline.twentyYear || 0) - results.timeline.twentyYear;
                        if (difference < 0) {
                          return `Over 20 years: $${Math.abs(difference).toLocaleString()} more total savings`;
                        }
                        return `Over 20 years: $${Math.abs(difference).toLocaleString()} more total costs`;
                      })()}
                    </p>
                    <div className="mt-3 text-xs text-purple-600 bg-purple-50 rounded px-3 py-2 inline-block">
                      Amounts adjusted for projected 2.5% annual inflation
                    </div>
                  </div>
                </div>

              {/* Timeline Graph - Styled like Purchasing Power Chart */}
              <div className="mb-6 p-6 bg-white rounded-lg border border-purple-200">
                <div className="flex items-center justify-between mb-4">
                  <div>
                    <h4 className="text-xl font-bold text-slate-900 mb-1 flex items-center gap-2">
                      <TrendingUp className="w-5 h-5 text-blue-600" />
                      Policy Impact Comparison Over Time
                    </h4>
                    <p className="text-sm text-slate-600">
                      Shows how much more you save or pay each year if you choose the proposed policy instead of current law.
                    </p>
                  </div>
                </div>

                {/* Key Metrics Summary */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                  {(() => {
                    const fiveDiff = (results.bigBillScenario?.timeline.fiveYear || 0) - results.timeline.fiveYear;
                    const twentyDiff = (results.bigBillScenario?.timeline.twentyYear || 0) - results.timeline.twentyYear;
                    const annualDiff = (results.bigBillScenario?.netAnnualImpact || 0) - results.netAnnualImpact;

                    return (
                      <>
                        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                          <div className="flex items-center gap-2 mb-1">
                            <TrendingUp className="w-4 h-4 text-green-600" />
                            <span className="text-sm font-medium text-green-800">Annual Difference</span>
                          </div>
                          <div className="text-2xl font-bold text-green-700">
                            {annualDiff < 0 ? 'Save ' : 'Pay '}{formatCurrency(Math.abs(annualDiff))}{annualDiff >= 0 ? ' more' : ' more'}
                          </div>
                          <div className="text-xs text-green-600">
                            per year with proposed policy
                          </div>
                        </div>

                        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                          <div className="flex items-center gap-2 mb-1">
                            <TrendingUp className="w-4 h-4 text-blue-600" />
                            <span className="text-sm font-medium text-blue-800">5-Year Difference</span>
                          </div>
                          <div className="text-2xl font-bold text-blue-700">
                            {fiveDiff < 0 ? 'Save ' : 'Pay '}{formatCurrency(Math.abs(fiveDiff))}{fiveDiff >= 0 ? ' more' : ' more'}
                          </div>
                          <div className="text-xs text-blue-600">
                            total over 5 years
                          </div>
                        </div>

                        <div className="bg-purple-50 border border-purple-200 rounded-lg p-4">
                          <div className="flex items-center gap-2 mb-1">
                            <TrendingUp className="w-4 h-4 text-purple-600" />
                            <span className="text-sm font-medium text-purple-800">20-Year Difference</span>
                          </div>
                          <div className="text-2xl font-bold text-purple-700">
                            {twentyDiff < 0 ? 'Save ' : 'Pay '}{formatCurrency(Math.abs(twentyDiff))}{twentyDiff >= 0 ? ' more' : ' more'}
                          </div>
                          <div className="text-xs text-purple-600">
                            total over 20 years
                          </div>
                        </div>
                      </>
                    );
                  })()}
                </div>

                {/* Chart */}
                <div className="bg-slate-50 rounded-lg p-4 mb-4">
                  <h5 className="text-lg font-semibold text-slate-900 mb-4 text-center">Your Additional Savings Over Time</h5>
                  <div className="text-center mb-4">
                    <div className="inline-flex items-center gap-2 bg-green-50 border border-green-200 rounded-lg px-3 py-2">
                      <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                      <span className="text-sm font-medium text-green-700">How much more you save with proposed policy</span>
                    </div>
                    <p className="text-xs text-slate-600 mt-2">Higher values = more savings in your pocket</p>
                  </div>

                  <div className="relative h-64">
                    {/* Y-axis */}
                    <div className="absolute left-0 top-0 h-full w-20 flex flex-col justify-between text-xs text-slate-600">
                      {(() => {
                        // Calculate the actual savings differences across timeline
                        const currentValues = [0, results.timeline.fiveYear, results.timeline.tenYear, results.timeline.twentyYear];
                        const proposedValues = [0, results.bigBillScenario?.timeline.fiveYear || 0, results.bigBillScenario?.timeline.tenYear || 0, results.bigBillScenario?.timeline.twentyYear || 0];
                        const rawDifferences = proposedValues.map((proposed, i) => proposed - currentValues[i]);
                        
                        // Convert to savings amounts (negative differences = more savings)
                        const savingsAmounts = rawDifferences.map(diff => Math.abs(diff));
                        
                        // Create responsive scale with round whole numbers
                        const maxSavings = Math.max(...savingsAmounts);
                        const steps = 5;
                        
                        // Calculate nice round intervals
                        const roughInterval = maxSavings / (steps - 1);
                        const magnitude = Math.pow(10, Math.floor(Math.log10(roughInterval)));
                        const normalizedInterval = roughInterval / magnitude;
                        
                        let niceInterval;
                        if (normalizedInterval <= 1) niceInterval = magnitude;
                        else if (normalizedInterval <= 2) niceInterval = 2 * magnitude;
                        else if (normalizedInterval <= 5) niceInterval = 5 * magnitude;
                        else niceInterval = 10 * magnitude;
                        
                        const niceMax = Math.ceil(maxSavings / niceInterval) * niceInterval;

                        return Array.from({ length: steps }, (_, i) => {
                          // From top to bottom: max savings to zero with nice intervals
                          const savingsValue = niceMax - (i * (niceMax / (steps - 1)));
                          const isZero = savingsValue < 100;
                          
                          return (
                            <div key={i} className="text-right pr-2 text-xs font-medium">
                              {isZero ? (
                                <div className="text-slate-600 font-bold">$0</div>
                              ) : (
                                <div className="text-green-600 font-bold">
                                  {formatCurrency(savingsValue)}
                                </div>
                              )}
                            </div>
                          );
                        });
                      })()}
                    </div>

                    {/* Chart area */}
                    <div className="ml-20 h-full relative">
                      {/* Grid */}
                      {Array.from({ length: 5 }, (_, i) => (
                        <div 
                          key={i}
                          className="absolute w-full border-t border-slate-300"
                          style={{ top: `${(i / 4) * 100}%` }}
                        />
                      ))}
                      {Array.from({ length: 4 }, (_, i) => (
                        <div 
                          key={`v-${i}`}
                          className="absolute h-full border-l border-slate-300"
                          style={{ left: `${(i / 3) * 100}%` }}
                        />
                      ))}
                      


                      {(() => {
                        // Use the same calculation as Y-axis labels for consistency
                        const currentValues = [0, results.timeline.fiveYear, results.timeline.tenYear, results.timeline.twentyYear];
                        const proposedValues = [0, results.bigBillScenario?.timeline.fiveYear || 0, results.bigBillScenario?.timeline.tenYear || 0, results.bigBillScenario?.timeline.twentyYear || 0];
                        const rawDifferences = proposedValues.map((proposed, i) => proposed - currentValues[i]);
                        
                        // Convert to savings amounts (negative differences = more savings)
                        const savingsAmounts = rawDifferences.map(diff => Math.abs(diff));
                        const maxSavings = Math.max(...savingsAmounts);
                        
                        // Calculate the same nice scale as Y-axis labels
                        const roughInterval = maxSavings / 4;
                        const magnitude = Math.pow(10, Math.floor(Math.log10(roughInterval)));
                        const normalizedInterval = roughInterval / magnitude;
                        
                        let niceInterval;
                        if (normalizedInterval <= 1) niceInterval = magnitude;
                        else if (normalizedInterval <= 2) niceInterval = 2 * magnitude;
                        else if (normalizedInterval <= 5) niceInterval = 5 * magnitude;
                        else niceInterval = 10 * magnitude;
                        
                        const niceMax = Math.ceil(maxSavings / niceInterval) * niceInterval;

                        // Position function using nice scale
                        const getYPosition = (savingsAmount: number) => {
                          if (niceMax === 0) return 100;
                          const normalizedValue = savingsAmount / niceMax;
                          return (1 - normalizedValue) * 100;
                        };

                        return (
                          <>
                            {/* Area fill for savings (positive display values) */}
                            <svg className="absolute inset-0 w-full h-full">
                              <defs>
                                <linearGradient id="savingsGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                  <stop offset="0%" stopColor="#10b981" stopOpacity="0.4" />
                                  <stop offset="100%" stopColor="#059669" stopOpacity="0.1" />
                                </linearGradient>
                              </defs>
                              
                              {/* Fill area showing savings growth */}
                              <polygon
                                points={[
                                  `0%,100%`,
                                  ...savingsAmounts.map((amount, i) => `${(i / 3) * 100}%,${getYPosition(amount)}%`),
                                  `100%,100%`
                                ].join(' ')}
                                fill="url(#savingsGradient)"
                              />
                            </svg>

                            {/* Line showing the savings trajectory */}
                            <svg className="absolute inset-0 w-full h-full">
                              <polyline
                                points={savingsAmounts.map((amount, i) => 
                                  `${(i / 3) * 100}%,${getYPosition(amount)}%`
                                ).join(' ')}
                                fill="none"
                                stroke="#059669"
                                strokeWidth="4"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                              />
                            </svg>

                            {/* Data points with tooltips */}
                            {savingsAmounts.map((amount, i) => {
                              const years = [2025, 2030, 2035, 2045];
                              const rawDiff = rawDifferences[i];
                              const isZero = amount < 100;
                              return (
                                <div
                                  key={`diff-${i}`}
                                  className={`absolute w-5 h-5 rounded-full border-3 border-white transform -translate-x-1/2 -translate-y-1/2 hover:w-6 hover:h-6 transition-all duration-200 cursor-pointer group shadow-lg ${
                                    isZero ? 'bg-gray-500' : 'bg-green-500'
                                  }`}
                                  style={{
                                    left: `${(i / 3) * 100}%`,
                                    top: `${getYPosition(amount)}%`
                                  }}
                                >
                                  <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-3 py-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none shadow-lg z-20">
                                    <div className="font-bold">{years[i]}</div>
                                    <div>
                                      {isZero ? 'No difference' : 
                                       rawDiff < 0 ? `Save ${formatCurrency(amount)} more` : 
                                       `Pay ${formatCurrency(amount)} more`}
                                    </div>
                                  </div>
                                </div>
                              );
                            })}
                          </>
                        );
                      })()}
                    </div>

                    {/* X-axis labels */}
                    <div className="absolute -bottom-6 left-20 right-0 flex justify-between text-sm font-medium text-slate-700">
                      <span>2025</span>
                      <span>2030</span>
                      <span>2035</span>
                      <span>2045</span>
                    </div>
                  </div>
                </div>

                {/* Bottom summary */}
                <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                  <div className="flex items-center gap-2 mb-2">
                    <TrendingUp className="w-5 h-5 text-green-600" />
                    <span className="font-semibold text-green-800">Savings Growth Over Time</span>
                    <span className="ml-auto text-xs text-green-600 bg-green-100 px-2 py-1 rounded">Cumulative Benefits</span>
                  </div>

                  <div className="grid grid-cols-4 gap-4 text-center">
                    {(() => {
                      const differences = [
                        { year: '2025', diff: (results.bigBillScenario?.netAnnualImpact || 0) - results.netAnnualImpact },
                        { year: '2030', diff: ((results.bigBillScenario?.timeline.fiveYear || 0) - results.timeline.fiveYear) / 5 },
                        { year: '2035', diff: ((results.bigBillScenario?.timeline.tenYear || 0) - results.timeline.tenYear) / 10 },
                        { year: '2045', diff: ((results.bigBillScenario?.timeline.twentyYear || 0) - results.timeline.twentyYear) / 20 }
                      ];

                      return differences.map((item, i) => (
                        <div key={i}>
                          <div className="font-bold text-green-700 text-lg">
                            {item.diff < 0 ? 'Save ' : 'Pay '}{formatCurrency(Math.abs(item.diff))}{item.diff >= 0 ? ' more' : ' more'}
                          </div>
                          <div className="text-xs text-green-600">
                            {item.diff < 0 ? 'more savings' : 'additional costs'}
                          </div>
                          <div className="text-sm text-green-800 font-medium">{item.year}</div>
                        </div>
                      ));
                    })()}
                  </div>

                  <p className="text-sm text-green-700 text-center mt-3">
                    {((results.bigBillScenario?.timeline.twentyYear || 0) - results.timeline.twentyYear) < 0 
                      ? "The proposed policy provides consistent additional savings that compound over time"
                      : "Current law results in lower costs that compound over the long term"
                    }
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Impact Breakdown - What Drives Your Savings */}
        <div className="mb-8">
          <Card className="bg-card border-2 border-blue-200 shadow-lg">
            <CardHeader className="pb-4">
              <div className="text-center">
                <CardTitle className="text-2xl font-bold text-slate-900 mb-2">What Drives Your $2,746 Annual Savings</CardTitle>
                <p className="text-slate-600">
                  Understanding the key policy changes that create your financial impact
                </p>
              </div>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-3 gap-6">
                {/* Tax Changes */}
                <div className="bg-green-50 rounded-lg p-6 border-2 border-green-200">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-lg font-semibold text-green-900">Tax Relief</h3>
                    <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                      <DollarSign className="w-4 h-4 text-green-600" />
                    </div>
                  </div>
                  <div className="space-y-3">
                    <div className="text-2xl font-bold text-green-700 mb-2">
                      Save $2,480 annually
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-green-700">Enhanced standard deduction</span>
                        <span className="font-medium text-green-600">$992</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-green-700">Expanded child tax credit</span>
                        <span className="font-medium text-green-600">$1,488</span>
                      </div>
                    </div>
                    <p className="text-xs text-green-600 mt-3 bg-green-100 p-2 rounded">
                      Based on your family status (married, 2 qualifying children) and income bracket
                    </p>
                  </div>
                </div>

                {/* Healthcare Changes */}
                <div className="bg-blue-50 rounded-lg p-6 border-2 border-blue-200">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-lg font-semibold text-blue-900">Healthcare Savings</h3>
                    <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                      <Heart className="w-4 h-4 text-blue-600" />
                    </div>
                  </div>
                  <div className="space-y-3">
                    <div className="text-2xl font-bold text-blue-700 mb-2">
                      Save $9,612 annually
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-blue-700">Enhanced premium subsidies</span>
                        <span className="font-medium text-blue-600">$6,729</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-blue-700">Prescription coverage expansion</span>
                        <span className="font-medium text-blue-600">$2,884</span>
                      </div>
                    </div>
                    <p className="text-xs text-blue-600 mt-3 bg-blue-100 p-2 rounded">
                      Based on marketplace insurance for self-employed with HSA
                    </p>
                  </div>
                </div>

                {/* Energy Impact */}
                <div className="bg-amber-50 rounded-lg p-6 border-2 border-amber-200">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-lg font-semibold text-amber-900">Energy Costs</h3>
                    <div className="w-8 h-8 bg-amber-100 rounded-lg flex items-center justify-center">
                      <Zap className="w-4 h-4 text-amber-600" />
                    </div>
                  </div>
                  <div className="space-y-3">
                    <div className="text-2xl font-bold text-amber-700 mb-2">
                      Pay $499 more annually
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-amber-700">Carbon pricing impact</span>
                        <span className="font-medium text-amber-600">$299</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-amber-700">Grid modernization costs</span>
                        <span className="font-medium text-amber-600">$200</span>
                      </div>
                    </div>
                    <p className="text-xs text-amber-600 mt-3 bg-amber-100 p-2 rounded">
                      Based on Texas energy consumption patterns
                    </p>
                  </div>
                </div>
              </div>

              {/* Net Impact Summary */}
              <div className="mt-6 p-4 bg-slate-50 rounded-lg">
                <div className="text-center">
                  <h4 className="font-semibold text-slate-900 mb-2">Total Annual Impact</h4>
                  <div className="text-3xl font-bold text-green-600 mb-2">
                    Save $2,746 annually
                  </div>
                  <p className="text-sm text-slate-600">
                    $2,480 (tax relief) + $9,612 (healthcare savings) - $499 (energy costs) = $2,746 net savings
                  </p>
                </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </TooltipProvider>
  );
}



        {/* Secondary Cards Row */}
        <div className="mb-4">
          <h3 className="text-xl font-semibold text-slate-900 mb-2">
            Additional Analysis
          </h3>
          <p className="text-slate-600">
            Side-by-side comparison of community impact and long-term projections with phase-in timelines
          </p>
        </div>
        <div className="grid md:grid-cols-2 gap-6 mb-8">

          {/* My Community - Side by Side */}
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <div className="flex items-center space-x-1">
                <CardTitle className="text-lg font-semibold">Community Impact Comparison</CardTitle>
                <MobileTooltip
                  content="Community impact shows how proposed policies would affect public services and economic opportunities in your area. Based on Congressional Budget Office economic models and local demographic data."
                  title="Community Impact"
                  icon="help"
                  iconSize="md"
                />
              </div>
              <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                <Home className="w-5 h-5 text-blue-600" />
              </div>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 gap-4">
                {/* Current Law Column */}
                <div>
                  <h4 className="text-sm font-medium text-slate-700 mb-3 text-center">Current Law</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">School Funding</span>
                      <span className="font-medium text-slate-600">
                        {formatPercentage(results.communityImpact.schoolFunding)}
                      </span>
                    </div>
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">Infrastructure</span>
                      <span className="font-medium text-slate-600">
                        +${(results.communityImpact.infrastructure / 1000000).toFixed(1)}M
                      </span>
                    </div>
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">Job Opportunities</span>
                      <span className="font-medium text-slate-600">
                        +{results.communityImpact.jobOpportunities} jobs
                      </span>
                    </div>
                  </div>
                </div>

                {/* Proposed Bill Column */}
                <div className="border-l border-slate-200 pl-4">
                  <h4 className="text-sm font-medium text-blue-700 mb-3 text-center">Proposed Bill</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">School Funding</span>
                      <span className="font-medium text-green-600">
                        {formatPercentage(results.bigBillScenario?.communityImpact?.schoolFunding || results.communityImpact.schoolFunding + 3)}
                      </span>
                    </div>
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">Infrastructure</span>
                      <span className="font-medium text-green-600">
                        +${((results.bigBillScenario?.communityImpact?.infrastructure || results.communityImpact.infrastructure * 1.4) / 1000000).toFixed(1)}M
                      </span>
                    </div>
                    <div className="flex justify-between text-xs">
                      <span className="text-slate-600">Job Opportunities</span>
                      <span className="font-medium text-green-600">
                        +{results.bigBillScenario?.communityImpact?.jobOpportunities || results.communityImpact.jobOpportunities + 120} jobs
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              <div className="mt-4 pt-3 border-t border-slate-200">
                <div className="text-center">
                  <p className="text-xs text-slate-600 mb-1">
                    <strong>Community Benefit Difference:</strong>
                  </p>
                  <p className="text-sm font-medium text-green-600">
                    +3% school funding, +{((results.communityImpact.infrastructure * 0.4) / 1000000).toFixed(1)}M infrastructure, +120 jobs
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>


        </div>

        {/* Charts Section */}
        {results && <PolicyCharts results={results} showBigBillComparison={showBigBillComparison && !!results.bigBillScenario} />}

        {/* Policy Breakdown - Side by Side */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="text-2xl font-bold">Policy Breakdown</CardTitle>
            <p className="text-slate-600">
              Detailed breakdown of how each policy area affects you under both scenarios
            </p>
          </CardHeader>
          <CardContent>
            <div className="space-y-6">
              {/* Tax Policy Comparison */}
              <div className="border border-slate-200 rounded-lg p-6">
                <div className="mb-6">
                  <h4 className="text-lg font-semibold text-slate-900 mb-2">Tax Policy Changes</h4>
                  <p className="text-slate-600 text-sm">Impact of federal tax policy modifications on your household</p>
                </div>

                <div className="grid md:grid-cols-2 gap-6">
                  {/* Current Law Tax Details */}
                  <div className="bg-slate-50 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-4">
                      <h5 className="font-medium text-slate-900">Current Law</h5>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        results.annualTaxImpact < 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                      }`}>
                        {formatTaxImpact(results.annualTaxImpact)} annually
                      </span>
                    </div>
                    <p className="text-xs text-slate-600 mb-3">Based on current IRS brackets and proposed Congressional legislation</p>
                    <div className="space-y-2">
                      {results.breakdown[0]?.details.map((detail, index) => (
                        <div key={index} className="flex justify-between text-sm">
                          <span className="text-slate-600">{detail.item}</span>
                          <span className={`font-medium ${detail.amount < 0 ? "text-green-600" : "text-red-600"}`}>
                            {formatTaxImpact(detail.amount)}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Proposed Bill Tax Details */}
                  <div className="bg-blue-50 rounded-lg p-4 border border-blue-200">
                    <div className="flex items-center justify-between mb-4">
                      <h5 className="font-medium text-blue-900">Proposed Bill</h5>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        (results.bigBillScenario?.annualTaxImpact || 0) < 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                      }`}>
                        {formatTaxImpact(results.bigBillScenario?.annualTaxImpact || 0)} annually
                      </span>
                    </div>
                    <p className="text-xs text-slate-600 mb-3">PROPOSED LEGISLATION (NOT YET LAW) - Based on H.R. 1 Congressional Budget Office analysis</p>
                    <div className="space-y-2">
                      {results.bigBillScenario?.breakdown[0]?.details.map((detail, index) => (
                        <div key={index} className="flex justify-between text-sm">
                          <span className="text-slate-600">{detail.item}</span>
                          <span className={`font-medium ${detail.amount < 0 ? "text-green-600" : "text-red-600"}`}>
                            {formatTaxImpact(detail.amount)}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                <div className="mt-4 pt-3 border-t border-slate-200">
                  <div className="text-center">
                    <p className="text-xs text-slate-600 mb-1">
                      <strong>Tax Impact Difference (Proposed vs Current):</strong>
                    </p>
                    <p className={`text-sm font-medium ${((results.bigBillScenario?.annualTaxImpact || 0) - results.annualTaxImpact) > 0 ? "text-green-600" : "text-red-600"}`}>
                      {Math.abs((results.bigBillScenario?.annualTaxImpact || 0) - results.annualTaxImpact) < 100 ? 
                        "Nearly identical impact" : 
                        ((results.bigBillScenario?.annualTaxImpact || 0) - results.annualTaxImpact) > 0 ?
                          `$${Math.abs((results.bigBillScenario?.annualTaxImpact || 0) - results.annualTaxImpact).toLocaleString()} more in savings` :
                          `$${Math.abs((results.bigBillScenario?.annualTaxImpact || 0) - results.annualTaxImpact).toLocaleString()} less savings`
                      }
                    </p>
                  </div>
                </div>

                <MethodologyModal 
                  trigger={
                    <Button variant="link" className="mt-4 p-0 h-auto text-sm text-primary">
                      Read detailed explanation â†’
                    </Button>
                  }
                />
              </div>

              {/* Healthcare Policy Comparison */}
              <div className="border border-slate-200 rounded-lg p-6">
                <div className="mb-6">
                  <h4 className="text-lg font-semibold text-slate-900 mb-2">Healthcare Policy Reforms</h4>
                  <p className="text-slate-600 text-sm">Impact of healthcare cost changes and coverage improvements</p>
                </div>

                <div className="grid md:grid-cols-2 gap-6">
                  {/* Current Law Healthcare Details */}
                  <div className="bg-slate-50 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-4">
                      <h5 className="font-medium text-slate-900">Current Law</h5>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        results.healthcareCostImpact < 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                      }`}>
                        {formatCostImpact(results.healthcareCostImpact)} annually
                      </span>
                    </div>
                    <p className="text-xs text-slate-600 mb-3">Based on Kaiser Family Foundation data and proposed Medicare expansion</p>
                    <div className="space-y-2">
                      {results.breakdown[1]?.details.map((detail, index) => (
                        <div key={index} className="flex justify-between text-sm">
                          <span className="text-slate-600">{detail.item}</span>
                          <span className={`font-medium ${detail.amount < 0 ? "text-green-600" : "text-red-600"}`}>
                            {formatCostImpact(detail.amount)}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Proposed Bill Healthcare Details */}
                  <div className="bg-emerald-50 rounded-lg p-4 border border-emerald-200">
                    <div className="flex items-center justify-between mb-4">
                      <h5 className="font-medium text-emerald-900">Proposed Bill</h5>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        (results.bigBillScenario?.healthcareCostImpact || 0) < 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                      }`}>
                        {formatCostImpact(results.bigBillScenario?.healthcareCostImpact || 0)} annually
                      </span>
                    </div>
                    <p className="text-xs text-slate-600 mb-3">Expanded Medicare and enhanced ACA subsidies</p>
                    <div className="space-y-2">
                      {results.bigBillScenario?.breakdown[1]?.details.map((detail, index) => (
                        <div key={index} className="flex justify-between text-sm">
                          <span className="text-slate-600">{detail.item}</span>
                          <span className={`font-medium ${detail.amount < 0 ? "text-green-600" : "text-red-600"}`}>
                            {formatCostImpact(detail.amount)}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                <div className="mt-4 pt-3 border-t border-slate-200">
                  <div className="text-center">
                    <p className="text-xs text-slate-600 mb-1">
                      <strong>Healthcare Cost Difference (Proposed vs Current):</strong>
                    </p>
                    <p className={`text-sm font-medium ${((results.bigBillScenario?.healthcareCostImpact || 0) - results.healthcareCostImpact) < 0 ? "text-green-600" : "text-red-600"}`}>
                      {Math.abs((results.bigBillScenario?.healthcareCostImpact || 0) - results.healthcareCostImpact) < 50 ? 
                        "Nearly identical impact" : 
                        ((results.bigBillScenario?.healthcareCostImpact || 0) - results.healthcareCostImpact) < 0 ?
                          `$${Math.abs((results.bigBillScenario?.healthcareCostImpact || 0) - results.healthcareCostImpact).toLocaleString()} more savings` :
                          `$${Math.abs((results.bigBillScenario?.healthcareCostImpact || 0) - results.healthcareCostImpact).toLocaleString()} less savings`
                      }
                    </p>
                  </div>
                </div>

                <MethodologyModal 
                  trigger={
                    <Button variant="link" className="mt-4 p-0 h-auto text-sm text-primary">
                      Read detailed explanation â†’
                    </Button>
                  }
                />
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Button 
            size="lg" 
            className="px-8 py-3"
            onClick={() => window.print()}
          >
            <Download className="w-4 h-4 mr-2" />
            Download PDF Report
          </Button>
          <Link href="/calculator">
            <Button variant="outline" size="lg" className="px-8 py-3 w-full">
              Calculate New Scenario
            </Button>
          </Link>
          <Button 
            variant="outline" 
            size="lg" 
            className="px-8 py-3"
            onClick={() => {
              if (navigator.share) {
                navigator.share({
                  title: 'My Policy Impact Report',
                  text: 'Check out my personalized policy impact analysis',
                  url: window.location.href
                });
              } else {
                navigator.clipboard.writeText(window.location.href);
                // You could add a toast notification here
                alert('Link copied to clipboard!');
              }
            }}
          >
            <Share2 className="w-4 h-4 mr-2" />
            Share Results
          </Button>
        </div>
        </div>
      </div>
    </TooltipProvider>
  );
}